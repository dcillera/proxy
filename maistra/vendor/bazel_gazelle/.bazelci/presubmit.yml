---
matrix:
  platform:
    - ubuntu2004
    - macos
    - windows

tasks:
  ubuntu1804:
    platform: ubuntu1804
    build_targets:
    - "..."
    run_targets:
    # Run Gazelle on repo to verify BUILD files are up-to-date. The output shouldn't differ
    # between platforms, so we only run it from one.
    - "//:gazelle_ci"
    test_targets:
    - "..."
  bcr_tests:
    name: BCR test module
    platform: ${{ platform }}
    working_directory: tests/bcr
    shell_commands:
    # Regenerate the BUILD file for the test module using Gazelle.
    # Also verify -repo_config are generated correctly in gazelle.bash
    - rm pkg/BUILD.bazel
    - bazel run //:gazelle -- update pkg
    - bazel run //:gazelle -- pkg
    build_flags:
    - "--allow_yanked_versions=all"
    test_flags:
    - "--allow_yanked_versions=all"
    build_targets:
    - "//..."
    - "//:gazelle"
    test_targets:
    # Specify this target explicitly to verify that Gazelle generated it correctly.
    - "//pkg:pkg_test"
    - "//..."
  ubuntu1604:
    platform: ubuntu1604
    build_targets:
    - "..."
    test_targets:
    - "..."
  macos:
    platform: macos
    build_targets:
    - "..."
    test_targets:
    - "..."
  windows:
    platform: windows
    build_targets:
    - "--"
    - "..."
    - "-//cmd/autogazelle/..."
    test_targets:
    - "--"
    - "..."
    # autogazelle is only supported on UNIX-like platforms.
    # It requires UNIX domain sockets.
    - "-//cmd/autogazelle/..."
    # Stardoc produces different line-endings on windows,
    # so the documentation it generates doesn't match the checked in files
    - "-//docs:all"
    # Fails to execute, apparently due to command-line length limit.
    - "-//internal:bazel_test"
    # gazelle prints file paths with backward slashes on windows,
    # which doesn't match the golden files generated on *nix.
    - "-//tests:fix_mode_print0"
    - "-//tests:fix_mode_strict"
