load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//lib:utils.bzl", "is_bazel_6_or_greater")
load("//lib:write_source_files.bzl", "write_source_files")
load(":release.bzl", "multi_platform_go_binaries", "release")

exports_files([
    "create_release.sh",
    "create_version.sh",
])

bzl_library(
    name = "sri",
    srcs = [":integrity.bzl"],
    visibility = ["//lib/private/docs:__pkg__"],
)

bzl_library(
    name = "version",
    srcs = [":version.bzl"],
    visibility = ["//lib/private/docs:__pkg__"],
)

bzl_library(
    name = "hashes",
    srcs = ["hashes.bzl"],
    visibility = ["//visibility:public"],
)

multi_platform_go_binaries(
    name = "copy_to_directory",
    embed = ["//tools/copy_to_directory:copy_to_directory_lib"],
    tags = ["manual"],
)

multi_platform_go_binaries(
    name = "copy_directory",
    embed = ["//tools/copy_directory:copy_directory_lib"],
    tags = ["manual"],
)

multi_platform_go_binaries(
    name = "expand_template",
    embed = ["//tools/expand_template:expand_template_lib"],
    tags = ["manual"],
)

release(
    name = "release",
    tags = [
        "local",
        "manual",
        "no-remote",
    ],
    targets = [
        ":copy_directory",
        ":copy_to_directory",
        ":expand_template",
    ],
)

write_source_files(
    name = "releases_versions_check_in",
    files = {
        "integrity.bzl": ":release_versions",
    },
    tags = (["manual"] if not is_bazel_6_or_greater() else []),
)
